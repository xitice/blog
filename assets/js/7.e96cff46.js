(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{352:function(t,a,e){"use strict";e.r(a);var s=e(42),i=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"利用git-config-配置全局、目录、仓库及的用户名和邮箱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#利用git-config-配置全局、目录、仓库及的用户名和邮箱"}},[t._v("#")]),t._v(" 利用git config 配置全局、目录、仓库及的用户名和邮箱")]),t._v(" "),e("h2",{attrs:{id:"为什么要配置不同的用户名和邮箱？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要配置不同的用户名和邮箱？"}},[t._v("#")]),t._v(" 为什么要配置不同的用户名和邮箱？")]),t._v(" "),e("ul",[e("li",[t._v("一般资料、环境最齐全的就一台电脑")]),t._v(" "),e("li",[t._v("我们除了要提交公司的代码，还要往自己的 git 平台提交代码")]),t._v(" "),e("li",[t._v("两个代码管理平台需要用不同的邮箱，是保护公司，也是保护自己")])]),t._v(" "),e("h2",{attrs:{id:"全局配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局配置"}},[t._v("#")]),t._v(" 全局配置")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your username"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yout email"')]),t._v("\n")])])]),e("p",[t._v("这种配置方法，在当前计算机生效，在 "),e("code",[t._v("user/currentUser")]),t._v(" 目录下生成.gitconfig文件\n但是这种配置会使你在任何仓库提交都是一个 name 和 email")]),t._v(" "),e("h2",{attrs:{id:"仓库及配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#仓库及配置"}},[t._v("#")]),t._v(" 仓库及配置")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your username"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your email"')]),t._v("\n")])])]),e("p",[t._v("以上这种配置，在当前 "),e("code",[t._v("git repository")]),t._v(" 生效，会在当前 "),e("code",[t._v("repository/.git/config")]),t._v(" 中生成对应的记录，只在当前目录有效")]),t._v(" "),e("h2",{attrs:{id:"利用-include-includeif-实现不同文件夹下不同的git配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#利用-include-includeif-实现不同文件夹下不同的git配置"}},[t._v("#")]),t._v(" 利用 include/includeif 实现不同文件夹下不同的git配置")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("只有git版本大于2.13才能用")])]),t._v(" "),e("p",[t._v("利用include/includeif可以实现在不同的目录加载不同的局部配置文件")]),t._v(" "),e("p",[e("strong",[t._v("步骤：")])]),t._v(" "),e("p",[t._v("下面为.gitconfig文件：")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('[user]\n\tname = yourGlobalName\n\temail = yourGlobalEmail\n[includeIf "gitdir:E:/study/gitdoc/"]\n\tpath = .gitconfig-study.config\n')])])]),e("p",[t._v("下面为path路径中指定的.gitconfig-study.config")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[user]\n\tname = yourPrivateName\n\temail = yourPrivateEmail\n")])])]),e("p",[t._v("注意：在博客中看到很多人在写只要 "),e("code",[t._v(".gitconfig-study.config")]),t._v(" 放置的目录保持和path一致就行，但在本人电脑上莫名就是不行，最后无奈将 "),e("code",[t._v(".gitconfig-study.config")]),t._v(" 放置在 "),e("code",[t._v(".gitconfig")]),t._v(" 同一目录，最后生效。怀疑是在 windows 电脑上path 的写法有一定的特殊性，所以用相对目录可以成功。")]),t._v(" "),e("h2",{attrs:{id:"验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),e("p",[t._v("进入 "),e("code",[t._v("gitdir")]),t._v(" 对应的目录，打开 "),e("code",[t._v("git bash")]),t._v("，输入 "),e("code",[t._v("git config user.name")]),t._v(" 查看是否是自己配置的name")]),t._v(" "),e("h2",{attrs:{id:"git-查找-user-name-和-user-email-的规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-查找-user-name-和-user-email-的规则"}},[t._v("#")]),t._v(" git 查找 "),e("code",[t._v("user.name")]),t._v(" 和 "),e("code",[t._v("user.email")]),t._v(" 的规则")]),t._v(" "),e("p",[t._v("先判断是否是在git仓库？")]),t._v(" "),e("ul",[e("li",[t._v("是在 git 仓库\n"),e("ul",[e("li",[t._v("有局部 config 的话，加载局部配置的 config")]),t._v(" "),e("li",[t._v("没有局部的 config 的话，按照 include/includeif 加载")])])]),t._v(" "),e("li",[t._v("如果不是在git仓库\n"),e("ul",[e("li",[t._v("如果全局配置了include/includeif，按照 include/includeif 加载")]),t._v(" "),e("li",[t._v("如果全局没有配置 include/includeif， 直接获取全局配置")])])])])])}),[],!1,null,null,null);a.default=i.exports}}]);